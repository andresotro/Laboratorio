/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Modelo.Bacteriologa.Bacteriologa;
import Modelo.Examen.ConexionExamen;
import Modelo.Examen.Examen;
import Modelo.Medico.ConexionMedico;
import Modelo.Parametro.ConexionParametro;
import Modelo.Parametro.Parametro;
import Modelo.Remision.ConexionRemision;
import Modelo.Remision.Remision;
import Modelo.Resultado.ConexionResultado;
import Modelo.Resultado.Resultado;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 *
 * @author USUARIO
 */
public class VentanaBacteriologa extends javax.swing.JFrame {

    /**
     * Creates new form VentanaBacteriologa
     * @param remision
     * @param bac
     */
    public VentanaBacteriologa(String remision, Bacteriologa bac) {
        initComponents(remision, bac);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents(String remision, Bacteriologa bac) {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Paciente = new javax.swing.JLabel();
        Medico = new javax.swing.JLabel();
        Fecha = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Examen = new javax.swing.JLabel();
        Cancelar = new javax.swing.JButton();
        Registrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro de Parámetros");

        setModelo(remision);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("REGISTRO DE PARÁMETROS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jLabel1)
                .addGap(132, 132, 132))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Examen:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Paciente:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Remitido por:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Fecha remisión:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(Examen))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(Paciente))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(Medico))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(Fecha)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Examen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Paciente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Medico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Fecha)))
        );

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt, bac);
            }
        });

        Registrar.setText("Registrar");
        Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarActionPerformed(evt, bac, remision);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(Cancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Registrar)
                .addGap(169, 169, 169))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancelar)
                    .addComponent(Registrar))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>      

    private void setModelo(String remision) {

        try {

            ConexionRemision cr = new ConexionRemision();
            ConexionExamen ce = new ConexionExamen();
            ConexionMedico cm = new ConexionMedico();
            ConexionParametro cp = new ConexionParametro();
            String[] partes = remision.split(" - ");
            String[] iDs = partes[0].split("");

            Remision r = cr.obtenerRemision(Integer.parseInt(iDs[0]));
            Examen e = ce.obtenerExamen(Integer.parseInt(iDs[1]));
            
            String dr = "";
            if(cm.obtenerMedico(r.getIDMedico()).getIDGenero() == 1){
                dr = "Dr.";
            }else{
                dr= "Dra.";
            }
            
            List<Parametro> parametros = cp.obtenerParametrosExamen(e.getIDExamen());
            String[][] parametroT = new String[parametros.size()][4];
            
            for( int i = 0 ; i < parametros.size() ; i++  ){
                parametroT[i][0] = parametros.get(i).getNombre();
            }
            for (int i = 0; i < parametros.size(); i++) {
                parametroT[i][1] = Float.toString(parametros.get(i).getValorMinimo());
            }
            for (int i = 0; i < parametros.size(); i++) {
                parametroT[i][2] = Float.toString(parametros.get(i).getValorMaximo());
            }
            for (int i = 0; i < parametros.size(); i++) {
                parametroT[i][3] = null;
            }
            
            
            Examen.setText(partes[1]);
            Paciente.setText(partes[2]);
            Medico.setText(dr+" "+cm.obtenerMedico(r.getIDMedico()).getNombre()+" "+cm.obtenerMedico(r.getIDMedico()).getApellido());
            SimpleDateFormat formatDate = new SimpleDateFormat("yyyy-MM-dd");
            Fecha.setText(formatDate.format(r.getFecha()));

            jTable2.setModel(new javax.swing.table.DefaultTableModel(
                    parametroT,
                    new String[]{
                        "Parametro", "Valor Mínimo", "Valor Máximo", "Valor"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, true
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
            jTable2.getTableHeader().setReorderingAllowed(false);
            jScrollPane2.setViewportView(jTable2);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt, Bacteriologa bac) {                                         
        
        SeleccionRemision sr = new SeleccionRemision(bac);
        sr.setLocationRelativeTo(null);
        sr.setVisible(true);
        this.dispose();
        
    }   
    
    private void RegistrarActionPerformed(java.awt.event.ActionEvent evt, Bacteriologa bac, String remision) { 
        try {
            Boolean empty = false;
            
            ConexionRemision cr = new ConexionRemision();
            ConexionExamen ce = new ConexionExamen();
            ConexionParametro cp = new ConexionParametro();
            ConexionResultado cs = new ConexionResultado();
            
            String[] partes = remision.split(" - ");
            String[] iDs = partes[0].split("");
            
            Examen e = ce.obtenerExamen(Integer.parseInt(iDs[1]));
            Remision r = cr.obtenerRemision(Integer.parseInt(iDs[0]));
            
            List<Parametro> parametros = cp.obtenerParametrosExamen(e.getIDExamen());
            
            for (int i = 0; i < parametros.size(); i++){
                if( jTable2.getValueAt(i, 3) == null ){
                    empty = true;
                    JOptionPane.showMessageDialog(null, "Por favor llena todos los campos");
                    break;
                }
            }
            if( empty == false ){
                for (int i = 0; i < parametros.size(); i++) {
                    Resultado resultado = new Resultado();
                    resultado.setIDParametro(parametros.get(i).getIDParametro());
                    resultado.setIDPaciente(r.getIDPaciente());
                    resultado.setValor(Float.parseFloat(jTable2.getValueAt(i, 3).toString()));
                    resultado.setIDBacteriologa(bac.getIDBacteriologa());
                    // <editor-fold defaultstate="collapsed" desc="Pasos para obtener fecha date2">
                    Calendar cal = Calendar.getInstance();
                    Date date = cal.getTime();
                    DateFormat formato = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
                    String fecha = formato.format(date);
                    Date date2 = formato.parse(fecha);
                    // </editor-fold>
                    resultado.setFechaRealizacion(date2);
                    cs.insertarResultado(resultado);
                }
                cr.actualizarVerificado(r.getIDRemision());
                JOptionPane.showMessageDialog(null, "¡Registro de Parámetros completado de manera exitosa!");
                SeleccionRemision sr = new SeleccionRemision(bac);
                sr.setLocationRelativeTo(null);
                sr.setVisible(true);
                this.dispose();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }   

    // Variables declaration - do not modify                     
    private javax.swing.JButton Cancelar;
    private javax.swing.JLabel Examen;
    private javax.swing.JLabel Fecha;
    private javax.swing.JLabel Medico;
    private javax.swing.JLabel Paciente;
    private javax.swing.JButton Registrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration                   

}